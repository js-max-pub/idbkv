let DB=null;const IDB=()=>new Promise(((e,t)=>{if(DB)return e(DB);let r=window.indexedDB.open("IDBKV",1);r.onsuccess=t=>{DB=t.target.result,e(DB)},r.onupgradeneeded=t=>{DB=t.target.result,DB.createObjectStore("store"),t.target.transaction.oncomplete=t=>e(DB)}}));let DO=(e,t,r=[])=>new Promise(((n,s)=>{e.transaction(["store"],"readwrite").objectStore("store")[t](...r).onsuccess=async e=>{n(e.target.result)}})),X=new Proxy({},{deleteProperty:(e,t)=>IDB().then((e=>DO(e,"delete",[t]))),set:(e,t,r)=>IDB().then((e=>DO(e,"put",[r,t]))),get:(e,t)=>{switch(t){case"keys":return IDB().then((e=>DO(e,"getAllKeys")));default:return IDB().then((e=>DO(e,"get",[t])))}}});export default X;